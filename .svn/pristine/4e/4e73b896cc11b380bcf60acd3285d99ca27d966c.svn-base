package com.example.tingpan.grpproject;


import android.content.Intent;
import android.support.v7.app.ActionBarActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.EditText;

import me.drakeet.materialdialog.MaterialDialog;


public class Launch extends ActionBarActivity {
    private NodePreference nodePreference = NodePreference.getInstance();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_launch);
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();

        //noinspection SimplifiableIfStatement
        if (id == R.id.action_settings) {
            return true;
        }

        return super.onOptionsItemSelected(item);
    }

    public void chooseGame(View view){
        Intent intent = new Intent (this,ChooseGame.class);
        startActivity(intent);
    }

    public void setting(View view){
        settingDialog();
    }

    private void settingDialog() {
        final MaterialDialog mMaterialDialog = new MaterialDialog(this);
        mMaterialDialog.setTitle("Settings");
        LayoutInflater listContainer = LayoutInflater.from(this);
        View convertView = listContainer.inflate(R.layout.setting_dialog, null);
        final EditText portEdit = (EditText) convertView.findViewById(R.id.portNum);
        final EditText maxEdit = (EditText) convertView.findViewById(R.id.maxConnection);
        portEdit.setHint(String.valueOf(nodePreference.getPortNumber()));
        maxEdit.setHint(String.valueOf(nodePreference.getMaxConnection()));

        mMaterialDialog.setContentView(convertView);
        mMaterialDialog.setPositiveButton("OK", new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String portNumber = portEdit.getText().toString();
                String maxNumber = maxEdit.getText().toString();
                if (portNumber.length() > 0){
                    int portNum = Integer.parseInt(portNumber);
                    if(!nodePreference.setPortNumber(portNum)){
                        messageDialog("Port number is between 5000 - 65535, Please Input Again");
                        return;
                    }
                }
                if (maxNumber.length() > 0) {
                    int maxNum = Integer.parseInt(maxNumber);
                    if(!nodePreference.setMaxConnection(maxNum)){
                        messageDialog("Max connection number is between 0 - 1000, please set again");
                        return;
                    }
                }
                mMaterialDialog.dismiss();
                Log.d("setting" , nodePreference.getMaxConnection() + "," + nodePreference.getPortNumber());
            }
        });
        mMaterialDialog.setNegativeButton("CANCEL", new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                mMaterialDialog.dismiss();
            }
        });
        mMaterialDialog.show();
     }

    private void messageDialog(String msg){
        final MaterialDialog mMaterialDialog = new MaterialDialog(this);
        mMaterialDialog.setMessage(msg);
        mMaterialDialog.setPositiveButton("Get it", new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                mMaterialDialog.dismiss();
            }
        });
        mMaterialDialog.show();
    }
}
